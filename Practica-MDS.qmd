---
title: "Practica-MDS"
author: "Margalida Verd, Carla Martínez, Patricia Mateu"
format: html
editor: visual
---

Link al repositorio: [Repositorio Github](https://github.com/PatriciaMateu/Practica-MDS)

$\textbf{Enunciado:}$ La práctica consiste en representar gráficamente (con solo 2 coordenadas principales) las matrices de similitud generadas por cada kernel coloreando los puntos de acuerdo al grupo de animales de acuerdo a su phylum.

$\textbf{Solución:}$

Primero, cargamos las 4 tablas que nos dan:

-   `animals_PM`: matriz de similitud del kernel Pyramid Match
-   `animals_SP`: matriz de similitud del kernel Shortest-Path
-   `animals_VH`: matriz de similitud del kernel Vertex Histogram
-   `animals_phylum`: clasificación de cada animal por phylum

```{r, echo=FALSE,warning=FALSE,message=FALSE}
animals_PM <- read.table("ANIMALS-matrixPM.txt", header=FALSE)
animals_SP <- read.table("ANIMALS-matrixSP.txt", header=FALSE)
animals_VH <- read.table("ANIMALS-matrixVH.txt", header=FALSE)
animals_phylum <- read.table("fileListANIMAL_phylum.txt", header=FALSE)

```
Observamos que las matrices anteriores son de similitud, por lo tanto, aplicaremos una función a cada una de ellas para obtener las matrices de distancias. Aplicamos la función siguiente:

$$
f(x) = \sqrt{2(1-x)},
$$ 
donde $x$ representa cada entrada de las matrices. Hemos visto que esta función es una distancia.

```{r,warning=FALSE,message=FALSE}
f <- function(x){sqrt(2*(1-x))}
dist_PM <- apply(animals_PM, MARGIN=c(1, 2), FUN= f)
dist_SP <- apply(animals_SP, MARGIN=c(1, 2), FUN= f)
dist_VH <- apply(animals_VH, MARGIN=c(1, 2), FUN= f)
```

Bien, como la práctica nos pide colorerar los grupos de acuerdo a su phylum, vamos a transformar la variable $V2$ de la tabla "animal-phylum" (que corresponde al phylum de cada animal). Para ello, convertimos en tipo factor esta variable y cambiamos los nombres según el grupo al que pertenecen.

El resultado es el siguiente:

```{r, echo = FALSE, message = FALSE, warning=FALSE}
library(tidyverse)
animals_phylum$V2 <- as.factor(animals_phylum$V2) #para poder definir la paleta de colores
cambio_nombres <- c("Vertebrates", "Lancelet", "Ascidian","Hechinoderms", 
                    "Hemichordates","Arthropods","Nematodes","Annelids",
                    "Mollusks", "Brachiopodas", "Flatworms", "Cnidarians",
                    "Placozoans", "Poriferans")

animals_phylum <- animals_phylum %>%
        mutate("Animales" = cambio_nombres[V2]) %>% 
  glimpse()
```

Ahora que ya tenemos los datos listos, podemos empezar con el escalamiento multidimensional. Aplicaremos la función `cmdscale()` a cada matriz de distancias y tomaremos una decisión final.

Empezamos con el kernel Vertex Histogram.

```{r, echo=FALSE,warning=FALSE,message=FALSE}
library(magrittr)
library(dplyr)
library(ggpubr)

mds_VH <- dist_VH %>%          
  cmdscale() %>%
  as_tibble() %>% 
  mutate("PHYLUM" = animals_phylum$Animales) #añadimos la variable phylum para poder agrupar

colnames(mds_VH) <- c("Dim.1", "Dim.2", "PHYLUM")
colores <- c("Vertebrates" = "blue", "Lancelet" = "red", "Ascidian" = "green",
             "Hechinoderms" = "yellow", "Hemichordates" = "purple", "Flatworms" = "pink", 
             "Nematodes" = "orange", "Annelids" = "black", "Poriferans" = "#FF7256",
             "Brachiopodas" = "#556B2F", "Arthropods" = "#00BFFF", "Mollusks" = "#EE1289",
             "Placozoans" = "#8B1A1A", "Cnidarians" = "#C0FF3E") #elegimos los colores de cada grupo


ggscatter(mds_VH, x = "Dim.1", y = "Dim.2",
          color = "PHYLUM",
          palette = colores,
          size = 3)
```

Observemos que los datos están bastante dispersos. Si bien los vertebrados estan agrupados en la parte izquierda del gráfico, los demás grupos de animales no tienen una agrupación notable.

Seguimos con el kernel Pyramid Match. El resultado obtenido es el siguiente:

```{r, echo=FALSE,warning=FALSE,message=FALSE}
mds_PM <- dist_PM %>%          
  cmdscale() %>%
  as_tibble() %>% 
  mutate("PHYLUM" = animals_phylum$Animales)

colnames(mds_PM) <- c("Dim.1", "Dim.2", "PHYLUM")

#Plot MDS
ggscatter(mds_PM, x = "Dim.1", y = "Dim.2",
          color = "PHYLUM",
          palette = colores,
          size = 3)
```

A diferencia del otro gráfico, con este kernel ya vemos más agrupamiento segun el phylum. Notamos que los grupos más compactos son los vertebrados y los antrópodos. El grupo de los cnidarios también está bien agrupado.

Finalmente, con el kernel Shortest-Path obtenemos:

```{r, echo=FALSE,warning=FALSE,message=FALSE}
mds_SP <- dist_SP %>%          
  cmdscale() %>%
  as_tibble() %>% 
  mutate("PHYLUM" = animals_phylum$Animales)

colnames(mds_SP) <- c("Dim.1", "Dim.2", "PHYLUM")

#Plot MDS
ggscatter(mds_SP, x = "Dim.1", y = "Dim.2",
          color = "PHYLUM",
          palette = colores,
          size = 3)
```

Así como los vertebrados siguen estando agrupados, los antrópodos están más dispersos, aunque se vea una acumulación en la parte derecha del gráfico. Los moluscos y cnidarios también han quedado más agrupados que en los kernels anteriores.

$\textbf{Conclusión:}$
Hemos visto que los vertebrados tienden a agruparse en los tres kernels, sin embargo, observando el resto de animales, vemos que en el Vertex Histogram no hay una clasificación clara, mientras que en el Shortest-Path y en el Pyramid Match ya vemos una agrupación más definida de ciertas especies; sin embargo, concluimos que el Pyramid Match és el que nos ofrece la mejor agrupación.